var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React, { useState } from "react";
import Modal from "./modal";
import AudioPreview from "./audio";
import VideoPreview from "./video";
import ImagePreview from "./image";
import { DownloadIcon } from "../assets/icons";
import { wrap, wrapUrl } from "./chatbox";
import "../style.css";
import "./media.css";
var MediaPreview = function (_a) {
    var type = _a.type, _b = _a.url, url = _b === void 0 ? "" : _b, _c = _a.caption, caption = _c === void 0 ? "" : _c, mode = _a.mode, fontFamily = _a.fontFamily, fontSize = _a.fontSize, index = _a.index, chat = _a.chat, mediaId = _a.mediaId, location = _a.location, showArrow = _a.showArrow, style = _a.style;
    var _d = useState(false), fullScreen = _d[0], setFullScreen = _d[1];
    var order = [
        "images",
        "stickers",
        "videos",
        "audios",
        "documents",
        "locations",
    ];
    var findIndex = order.findIndex(function (item) { return item === type; });
    var findAboveIndex = order.findIndex(function (item) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
        if (item === "images" &&
            ((_c = (_b = (_a = chat === null || chat === void 0 ? void 0 : chat.actions) === null || _a === void 0 ? void 0 : _a.find(function (action) { return action.send_images; })) === null || _b === void 0 ? void 0 : _b.send_images) === null || _c === void 0 ? void 0 : _c.length) > 0) {
            return true;
        }
        else if (item === "stickers" &&
            ((_f = (_e = (_d = chat === null || chat === void 0 ? void 0 : chat.actions) === null || _d === void 0 ? void 0 : _d.find(function (action) { return action.send_stickers; })) === null || _e === void 0 ? void 0 : _e.send_stickers) === null || _f === void 0 ? void 0 : _f.length) > 0) {
            return true;
        }
        else if (item === "audios" &&
            ((_j = (_h = (_g = chat === null || chat === void 0 ? void 0 : chat.actions) === null || _g === void 0 ? void 0 : _g.find(function (action) { return action.send_audios; })) === null || _h === void 0 ? void 0 : _h.send_audios) === null || _j === void 0 ? void 0 : _j.length) > 0) {
            return true;
        }
        else if (item === "videos" &&
            ((_m = (_l = (_k = chat === null || chat === void 0 ? void 0 : chat.actions) === null || _k === void 0 ? void 0 : _k.find(function (action) { return action.send_videos; })) === null || _l === void 0 ? void 0 : _l.send_videos) === null || _m === void 0 ? void 0 : _m.length) > 0) {
            return true;
        }
        else if (item === "documents" &&
            ((_q = (_p = (_o = chat === null || chat === void 0 ? void 0 : chat.actions) === null || _o === void 0 ? void 0 : _o.find(function (action) { return action.send_documents; })) === null || _p === void 0 ? void 0 : _p.send_documents) === null || _q === void 0 ? void 0 : _q.length) > 0) {
            return true;
        }
        else {
            return false;
        }
    });
    return (React.createElement("div", { className: "sarufi-media-preview sarufi-message-body ".concat((findIndex <= findAboveIndex && !index) || showArrow
            ? "sarufi-message-body-w-arrow"
            : ""), style: __assign({ background: "var(--sarufi-received-box-bg)", maxWidth: 280, padding: "6px 8px 8px 9px", marginTop: findIndex <= findAboveIndex && !index ? ".7rem" : "0", marginBottom: ".3rem", position: "relative", borderTopLeftRadius: findIndex <= findAboveIndex ? "7.5px" : "0", borderTopRightRadius: findIndex <= findAboveIndex ? "7.5px" : "0" }, style) },
        React.createElement(React.Fragment, null,
            (type === "images" || type === "stickers") && (React.createElement(ImagePreview, { url: url, caption: caption, openFullScreen: function () { return setFullScreen(true); }, isFullScreen: false, fontFamily: fontFamily, fontSize: fontSize })),
            type === "audios" && (React.createElement("div", { style: {
                    background: mode === "dark" ? "rgba(255, 255, 255, .1)" : "rgba(0,0,0,.1)",
                    borderRadius: ".3rem",
                    padding: ".1rem .5rem",
                } },
                React.createElement(AudioPreview, { url: url, fontSize: fontSize, mode: mode, mediaId: mediaId }))),
            type === "videos" && (React.createElement(VideoPreview, { url: url, caption: caption, fontFamily: fontFamily, fontSize: fontSize, mediaId: mediaId, mode: mode })),
            type === "documents" && (React.createElement("div", { style: {
                    background: mode === "dark" ? "rgba(255, 255, 255, .1)" : "rgba(0,0,0,.1)",
                    borderRadius: ".3rem",
                    padding: ".1rem .5rem",
                } },
                React.createElement(DocumentPreview, { url: url }))),
            type === "locations" && (React.createElement("div", { style: {
                    margin: ".5rem",
                } },
                React.createElement("div", { style: {
                        marginBottom: ".4rem",
                    } }, "Location:"),
                React.createElement("div", null,
                    (location === null || location === void 0 ? void 0 : location.latitude) && (React.createElement("div", null,
                        React.createElement("p", { style: {
                            // marginTop: ".2rem",
                            } },
                            React.createElement("span", { style: {
                                    opacity: 0.7,
                                } }, "Latitude:"),
                            " ", location === null || location === void 0 ? void 0 :
                            location.latitude))),
                    (location === null || location === void 0 ? void 0 : location.longitude) && (React.createElement("div", null,
                        React.createElement("p", { style: {
                                marginTop: ".2rem",
                            } },
                            React.createElement("span", { style: {
                                    opacity: 0.7,
                                } }, "Longitude:"),
                            " ", location === null || location === void 0 ? void 0 :
                            location.longitude))),
                    (location === null || location === void 0 ? void 0 : location.name) && (React.createElement("div", null,
                        React.createElement("p", { style: {
                                marginTop: ".2rem",
                            } },
                            React.createElement("span", { style: {
                                    opacity: 0.7,
                                } }, "Name:"),
                            " ", location === null || location === void 0 ? void 0 :
                            location.name))),
                    (location === null || location === void 0 ? void 0 : location.address) && (React.createElement("div", null,
                        React.createElement("p", { style: {
                                marginTop: ".2rem",
                            } },
                            React.createElement("span", { style: {
                                    opacity: 0.7,
                                } }, "Address:"),
                            " ", location === null || location === void 0 ? void 0 :
                            location.address))))))),
        React.createElement(Modal, { close: function () { return setFullScreen(false); }, open: fullScreen, closeWithBackdrop: true, mode: mode },
            React.createElement(React.Fragment, null, (type === "images" || type === "stickers") && (React.createElement(ImagePreview, { url: url, caption: caption, openFullScreen: function () { return setFullScreen(true); }, isFullScreen: fullScreen, fontFamily: fontFamily, fontSize: fontSize })))),
        caption && (React.createElement("p", { style: {
                margin: ".5rem 0 .7rem",
                color: "var(--sarufi-received-box-color)",
                fontFamily: "var(--sarufi-font-family)",
            } }, wrap(wrapUrl(caption))))));
};
export default MediaPreview;
var DocumentPreview = function (_a) {
    var url = _a.url;
    return (React.createElement("div", { style: {
            margin: ".5rem .5rem .5rem 0rem",
        }, className: "sarufi-flex-wide" },
        React.createElement("div", { style: {
                width: "calc( 100% - 50px )",
                transform: "scale(0.9)",
            } },
            React.createElement("span", { className: "sarufi-flex-start", style: {
                    width: "100%",
                    overflow: "hidden",
                    display: "-webkit-box",
                    WebkitLineClamp: 3,
                    WebkitBoxOrient: "vertical",
                } },
                React.createElement("span", null, url))),
        React.createElement("button", { style: {
                background: "none",
                border: "none",
                cursor: "pointer",
                color: "var(--sent-box-text-color)",
            }, className: "sarufi-button", onClick: function () { return downloadFile(url); } },
            React.createElement(DownloadIcon, null))));
};
export function downloadFile(url) {
    var aTag = document.createElement("a");
    aTag.href = url;
    aTag.download = "sarufi_document";
    aTag.download = url.replace(/^.*[\\\/]/, "");
    document.body.appendChild(aTag);
    aTag.click();
    aTag.remove();
}
